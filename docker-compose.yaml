services:
  # Production only
  # nginx:
  #   container_name: nginx`
  #   image: nginx:stable-alpine
  #   restart: on-failure
  #   depends_on:
  #     - rust
  #   networks:
  #     - app-network
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - /etc/nginx:/etc/nginx:ro
  #     - /etc/letsencrypt:/etc/letsencrypt:rw
  #     - /var/log/letsencrypt:/var/log/letsencrypt:rw
  #     - /var/www/letsencrypt:/var/www/letsencrypt:rw
  #     - client/static:/var/www/geospatialweb.ca/static:ro
  #     - logs:/var/log/nginx:rw

  rust:
    container_name: rust
    build:
      context: ./rust
      target: app
    # image: geospatialweb/rust-mvt-postgis:latest
    restart: unless-stopped
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "8000:8000"
    # volumes:
    #   - /etc/letsencrypt:/etc/letsencrypt:ro

  mvt:
    container_name: martin
    image: ghcr.io/maplibre/martin:latest
    command: ["--config", "./config/martin.yml"]
    restart: unless-stopped
    depends_on:
      postgis:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - app-network
    ports:
      - "3000:3000"
    volumes:
      - ./mvt:/config:ro
      # - /etc/letsencrypt:/etc/letsencrypt:ro

  postgis:
    container_name: postgis
    image: kartoza/postgis:16-3.4
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: pg_isready -d $POSTGRES_URI
      interval: 10s
      timeout: 5s
    networks:
      - app-network
    ports:
      - "5432:5432"
    volumes:
      - ./postgis:/docker-entrypoint-initdb.d:ro
      # - /etc/letsencrypt:/etc/letsencrypt:ro

networks:
  app-network:
    driver: bridge
