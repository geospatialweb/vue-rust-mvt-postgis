services:
  # Production only
  # nginx:
  #   container_name: nginx
  #   image: nginx:stable-alpine
  #   restart: on-failure
  #   depends_on:
  #     - go
  #   networks:
  #     - app-network
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - /etc/nginx:/etc/nginx:ro
  #     - /etc/letsencrypt:/etc/letsencrypt:rw
  #     - /var/log/letsencrypt:/var/log/letsencrypt:rw
  #     - /var/www/letsencrypt:/var/www/letsencrypt:rw
  #     - ./vue/static:/var/www/geospatialweb.ca/static:ro
  #     - ./logs:/var/log/nginx:rw

  # rust:
  #   container_name: rust
  #   build: .
  #   # image: geospatialweb/rust-mvt-postgis:latest
  #   command: /app/main
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - app-network
  #   ports:
  #     - "8000:8000"
  #   # volumes:
  #   #   - /etc/letsencrypt:/etc/letsencrypt:rw

  # martin:
  #   container_name: martin
  #   image: ghcr.io/maplibre/martin:latest
  #   command: ["--config", "./config/mvt.yml"]
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   networks:
  #     - app-network
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./mvt:/config:ro
  #     # - /etc/letsencrypt:/etc/letsencrypt:rw

  postgres:
    container_name: postgis
    image: kartoza/postgis:16-3.4
    restart: unless-stopped
    env_file:
      - .env
    # healthcheck:
    #   test: pg_isready -d $POSTGRES_DSN
    #   interval : 5s
    #   timeout : 5s
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - app-network
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d:ro
      # - /etc/letsencrypt:/etc/letsencrypt:rw

networks:
  app-network:
    driver: bridge
